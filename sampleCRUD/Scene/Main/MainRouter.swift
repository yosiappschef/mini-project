//
//  MainRouter.swift
//  sampleCRUD
//
//  Created by syndromme on 22/10/20.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol MainRoutingLogic
{
  func routeToCreateDepartment()
  func routeToDraftListScene()
  func routeToSorttListScene()
  func routeToAuthScene()
}

protocol MainDataPassing
{
  var dataStore: MainDataStore? { get }
}

class MainRouter: NSObject, MainRoutingLogic, MainDataPassing
{
  weak var viewController: MainViewController?
  var dataStore: MainDataStore?
  
  // MARK: Routing
  func routeToCreateDepartment() {
    let destinationVC = CreateDepartmentViewController(nibName: "CreateDepartmentView", bundle: nil)
    var destinationDS = destinationVC.router!.dataStore!
    passDataToCreateDepartment(source: dataStore!, destination: &destinationDS)
    navigateToCreateDepartment(source: viewController!, destination: destinationVC)
  }
  
  func routeToDraftListScene() {
    let destinationVC = DraftListViewController(nibName: "DraftListView", bundle: nil)
    var destinationDS = destinationVC.router!.dataStore!
    passDataToDraftList(source: dataStore!, destination: &destinationDS)
    navigateToDraftList(source: viewController!, destination: destinationVC)
  }
  
  func routeToSorttListScene() {
    let destinationVC = SortListVC(nibName: "SortListView", bundle: nil)
    destinationVC.doneTapped = {(sender) in
      self.dataStore?.sorts = sender
      self.viewController?.departments.removeAll()
      self.viewController?.interactor?.getDepartmentList(page: 0, query: "", size: Constant.paginateSize)
    }
    destinationVC.selectedSort = dataStore?.sorts ?? []
    navigateToSortDepartment(source: viewController!, destination: destinationVC)
  }
  
  func routeToAuthScene() {
    let destinationVC = UIStoryboard(name: "Main", bundle: nil).instantiateViewController(withIdentifier: "authVC") as! AuthViewController
    var destinationDS = destinationVC.router!.dataStore!
    passDataToAuth(source: dataStore!, destination: &destinationDS)
    navigateToAuth(source: viewController!, destination: destinationVC)
  }

  // MARK: Navigation
  func navigateToCreateDepartment(source: MainViewController, destination: CreateDepartmentViewController)
  {
    source.navigationController?.pushViewController(destination, animated: true)
  }
  
  func navigateToDraftList(source: MainViewController, destination: DraftListViewController)
  {
    source.navigationController?.pushViewController(destination, animated: true)
  }
  
  func navigateToSortDepartment(source: MainViewController, destination: SortListVC)
  {
    let nav = UINavigationController(rootViewController: destination)
    nav.modalTransitionStyle = .crossDissolve
    nav.modalPresentationStyle = .overFullScreen
    source.present(nav, animated: true, completion: nil)
  }
  
  func navigateToAuth(source: MainViewController, destination: AuthViewController)
  {
    destination.modalTransitionStyle = .crossDissolve
    destination.modalPresentationStyle = .overFullScreen
    source.present(destination, animated: true, completion: nil)
  }
  
  // MARK: Passing data
  func passDataToCreateDepartment(source: MainDataStore, destination: inout CreateDepartmentDataStore)
  {
    destination.selectedDepartment = source.selectedDepartment
  }
  
  func passDataToDraftList(source: MainDataStore, destination: inout DraftListDataStore)
  {
    
  }
  
  func passDataToAuth(source: MainDataStore, destination: inout AuthDataStore)
  {
    
  }
}
