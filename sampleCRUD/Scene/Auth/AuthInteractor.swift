//
//  AuthInteractor.swift
//  sampleCRUD
//
//  Created by syndromme on 22/10/20.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RxSwift

protocol AuthBusinessLogic
{
  func login(grantType: String, scope: String, username: String, password: String)
}

protocol AuthDataStore
{
  
}

class AuthInteractor: AuthBusinessLogic, AuthDataStore
{
  var presenter: AuthPresentationLogic?
  var worker: AuthWorker?
  
  func login(grantType: String, scope: String, username: String, password: String) {
    let request = Auth.Request(grant_type: grantType, scope: scope, username: username, password: password)
    worker = AuthWorker()
    worker?.doLogin(request: request).subscribe(onSuccess: { (results) in
      self.presenter?.presentHomeScene()
    }, onFailure: { (error) in
      self.presenter?.presentLoginFailed(message: error.localizedDescription)
    }).disposed(by: disposeBag)
  }
}
